{"version":3,"sources":["components/GameCard/index.js","components/Wrapper/index.js","components/title/index.js","components/Instructions/index.js","App.js","index.js"],"names":["GameCard","props","react_default","a","createElement","className","onClick","clickGame","id","click","alt","src","image","Wrapper","children","Title","Instructions","App","state","gameImage","gameImageClicked","score","resetGame","_this","setState","filter","console","log","scoreCard","shufflegameImages","includes","alert","i","length","j","Math","floor","random","_ref","_this2","this","components_Wrapper","title","components_Instructions","map","components_GameCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"y0CAmBeA,MAhBf,SAAkBC,GAEd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAAS,kBAAML,EAAMM,UAAUN,EAAMO,GAAIP,EAAMQ,SAC1EP,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMO,GAAIG,IAAKV,EAAMW,MAAOP,UAAU,kBAChDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBCFhBQ,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,wBCGvBE,MAJf,SAAsBf,GACpB,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBJ,EAAMa,WC+E9BG,6MA3EXC,MAAQ,CACJC,YACAC,iBAAkBD,EAClBE,MAAO,KAKbC,UAAY,WACVC,EAAKC,SAAS,CAAEJ,iBAAkBD,IAClCI,EAAKC,SAAS,CAACH,MAAO,OAItBd,UAAY,SAACC,EAAIC,GAEb,IAAMW,EAAmBG,EAAKL,MAAME,iBAAiBK,OACjD,SAAAL,GAAgB,OAAIA,EAAiBZ,KAAOA,IAGhDe,EAAKC,SAAS,CAAEJ,qBAChBM,QAAQC,IAAIP,EAAmB,WAC/BG,EAAKK,UAAUnB,GAEfc,EAAKM,kBAAkBV,MAG3BS,UAAY,SAAAnB,GAELc,EAAKL,MAAME,iBAAiBU,SAASrB,IAEhCc,EAAKC,SAAS,CAACH,MAAOE,EAAKL,MAAMG,MAAO,IACxCU,MAAM,0BAMVA,MAAM,aACNR,EAAKD,gBAObO,kBAAoB,SAACT,GACjB,IAAK,IAAIY,EAAIZ,EAAiBa,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAClD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADQM,EAEL,CAAClB,EAAiBc,GAAId,EAAiBY,IAAnFZ,EAAiBY,GAFgCM,EAAA,GAE5BlB,EAAiBc,GAFWI,EAAA,6EAMjD,IAAAC,EAAAC,KAGL,OADRd,QAAQC,IAAIa,KAAKtB,MAAMG,OAEXnB,EAAAC,EAAAC,cAACqC,EAAD,KACKvC,EAAAC,EAAAC,cAACsC,EAAD,2DAA2DF,KAAKtB,MAAMG,OACtEnB,EAAAC,EAAAC,cAACuC,EAAD,oFACAH,KAAKtB,MAAMC,UAAUyB,IAAI,SAAAzB,GAAS,OAC/BjB,EAAAC,EAAAC,cAACyC,EAAD,CACIjC,MAAOO,EAAUP,MACjBL,UAAWgC,EAAKhC,UAChBC,GAAIW,EAAUX,GACdsC,IAAK3B,EAAUX,GACfC,MAAOU,cAnEb4B,aCDlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fb9a9f12.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction GameCard(props) {\n    // console.log(props.click + \"this is me\");\n    return (\n        <div className=\"card\">\n            <div className=\"img-thumbnail\" onClick={() => props.clickGame(props.id, props.click)}>\n                <img alt={props.id} src={props.image} className=\"img-thumbnail\" />\n                <div className=\"content\">\n                 </div>\n            </div>\n            {/* <span onClick={() => props.clickCharacter(props.id)} className=\"clicked\"></span> */}\n        </div>\n\n\n    );\n}\n\nexport default GameCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Instructions(props) {\n  return <h1 className=\"instructions\">{props.children}</h1>\n}\n\nexport default Instructions;","import React, { Component } from \"react\";\nimport GameCard from \"./components/GameCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/title\";\nimport gameImage from \"./GameImages.json\";\nimport Instructions from \"./components/Instructions\"\n\nclass App extends Component {\n    state = {\n        gameImage,\n        gameImageClicked: gameImage,\n        score: 0,\n    \n    };\n\n\n  resetGame = () =>{\n    this.setState({ gameImageClicked: gameImage });\n    this.setState({score: 0,});\n  };\n\n\n    clickGame = (id, click) => {\n        //clicking on a gameImage \n        const gameImageClicked = this.state.gameImageClicked.filter(\n            gameImageClicked => gameImageClicked.id !== id\n        );\n\n        this.setState({ gameImageClicked });\n        console.log(gameImageClicked + \"clicked\");\n        this.scoreCard(click);\n        //shuffle\n        this.shufflegameImages(gameImage)\n    };\n\n    scoreCard = click => {\n        //let score = 0\n        if(this.state.gameImageClicked.includes(click)){\n            //logic to clear right  now\n                this.setState({score: this.state.score +1 });\n                alert(\"Yay you got a point!\")\n\n\n\n        }else{\n            \n            alert(\"You lose!\")\n            this.resetGame();\n\n\n        } \n\n    };\n\n    shufflegameImages = (gameImageClicked) => {\n        for (let i = gameImageClicked.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [gameImageClicked[i], gameImageClicked[j]] = [gameImageClicked[j], gameImageClicked[i]];\n        }\n    };\n\n    render() {\n//console.log(this.state.gameImageClicked)\nconsole.log(this.state.score);\n        return (\n            <Wrapper>\n                {<Title> Clicky Game - Click on an Image to Begin - Score: {this.state.score}</Title>}\n                {<Instructions> Click on an image to earn points, but don't click on the same one twice!  </Instructions>}\n                {this.state.gameImage.map(gameImage => (\n                    <GameCard\n                        image={gameImage.image}\n                        clickGame={this.clickGame}\n                        id={gameImage.id}\n                        key={gameImage.id}\n                        click={gameImage}\n                    />\n                ))}\n            </Wrapper>\n        );\n    }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//mport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}